// Generated by Haxe 3.4.7
(function ($global) { "use strict";
function $extend(from, fields) {
	function Inherit() {} Inherit.prototype = from; var proto = new Inherit();
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var HxOverrides = function() { };
HxOverrides.__name__ = true;
HxOverrides.iter = function(a) {
	return { cur : 0, arr : a, hasNext : function() {
		return this.cur < this.arr.length;
	}, next : function() {
		return this.arr[this.cur++];
	}};
};
var Lambda = function() { };
Lambda.__name__ = true;
Lambda.has = function(it,elt) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(x1 == elt) {
			return true;
		}
	}
	return false;
};
Lambda.exists = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(f(x1)) {
			return true;
		}
	}
	return false;
};
Lambda.foreach = function(it,f) {
	var x = $iterator(it)();
	while(x.hasNext()) {
		var x1 = x.next();
		if(!f(x1)) {
			return false;
		}
	}
	return true;
};
Lambda.find = function(it,f) {
	var v = $iterator(it)();
	while(v.hasNext()) {
		var v1 = v.next();
		if(f(v1)) {
			return v1;
		}
	}
	return null;
};
Math.__name__ = true;
var Reflect = function() { };
Reflect.__name__ = true;
Reflect.field = function(o,field) {
	try {
		return o[field];
	} catch( e ) {
		return null;
	}
};
Reflect.fields = function(o) {
	var a = [];
	if(o != null) {
		var hasOwnProperty = Object.prototype.hasOwnProperty;
		for( var f in o ) {
		if(f != "__id__" && f != "hx__closures__" && hasOwnProperty.call(o,f)) {
			a.push(f);
		}
		}
	}
	return a;
};
var Scout = function() { };
Scout.__name__ = true;
Scout.mount = function(sel,view) {
	window.document.querySelector(sel).appendChild(view.render().el);
};
var Std = function() { };
Std.__name__ = true;
Std.string = function(s) {
	return js_Boot.__string_rec(s,"");
};
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.htmlEscape = function(s,quotes) {
	s = s.split("&").join("&amp;").split("<").join("&lt;").split(">").join("&gt;");
	if(quotes) {
		return s.split("\"").join("&quot;").split("'").join("&#039;");
	} else {
		return s;
	}
};
var TodoApp = function() { };
TodoApp.__name__ = true;
TodoApp.main = function() {
	var store = new todo_model_Store({ todos : new scout_ModelCollection()});
	var app = new todo_view_App({ sel : "#App", title : "Todo", store : store});
	Scout.mount("#Root",app);
};
var haxe_IMap = function() { };
haxe_IMap.__name__ = true;
var haxe_ds_ObjectMap = function() {
	this.h = { __keys__ : { }};
};
haxe_ds_ObjectMap.__name__ = true;
haxe_ds_ObjectMap.__interfaces__ = [haxe_IMap];
haxe_ds_ObjectMap.prototype = {
	set: function(key,value) {
		var id = key.__id__ || (key.__id__ = ++haxe_ds_ObjectMap.count);
		this.h[id] = value;
		this.h.__keys__[id] = key;
	}
	,remove: function(key) {
		var id = key.__id__;
		if(this.h.__keys__[id] == null) {
			return false;
		}
		delete(this.h[id]);
		delete(this.h.__keys__[id]);
		return true;
	}
	,__class__: haxe_ds_ObjectMap
};
var haxe_ds_StringMap = function() {
	this.h = { };
};
haxe_ds_StringMap.__name__ = true;
haxe_ds_StringMap.__interfaces__ = [haxe_IMap];
haxe_ds_StringMap.prototype = {
	setReserved: function(key,value) {
		if(this.rh == null) {
			this.rh = { };
		}
		this.rh["$" + key] = value;
	}
	,getReserved: function(key) {
		if(this.rh == null) {
			return null;
		} else {
			return this.rh["$" + key];
		}
	}
	,remove: function(key) {
		if(__map_reserved[key] != null) {
			key = "$" + key;
			if(this.rh == null || !this.rh.hasOwnProperty(key)) {
				return false;
			}
			delete(this.rh[key]);
			return true;
		} else {
			if(!this.h.hasOwnProperty(key)) {
				return false;
			}
			delete(this.h[key]);
			return true;
		}
	}
	,keys: function() {
		return HxOverrides.iter(this.arrayKeys());
	}
	,arrayKeys: function() {
		var out = [];
		for( var key in this.h ) {
		if(this.h.hasOwnProperty(key)) {
			out.push(key);
		}
		}
		if(this.rh != null) {
			for( var key in this.rh ) {
			if(key.charCodeAt(0) == 36) {
				out.push(key.substr(1));
			}
			}
		}
		return out;
	}
	,__class__: haxe_ds_StringMap
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	this.message = String(val);
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.wrap = function(val) {
	if((val instanceof Error)) {
		return val;
	} else {
		return new js__$Boot_HaxeError(val);
	}
};
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
	__class__: js__$Boot_HaxeError
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.getClass = function(o) {
	if((o instanceof Array) && o.__enum__ == null) {
		return Array;
	} else {
		var cl = o.__class__;
		if(cl != null) {
			return cl;
		}
		var name = js_Boot.__nativeClassName(o);
		if(name != null) {
			return js_Boot.__resolveNativeClass(name);
		}
		return null;
	}
};
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o instanceof Array) {
			if(o.__enum__) {
				if(o.length == 2) {
					return o[0];
				}
				var str = o[0] + "(";
				s += "\t";
				var _g1 = 2;
				var _g = o.length;
				while(_g1 < _g) {
					var i = _g1++;
					if(i != 2) {
						str += "," + js_Boot.__string_rec(o[i],s);
					} else {
						str += js_Boot.__string_rec(o[i],s);
					}
				}
				return str + ")";
			}
			var l = o.length;
			var i1;
			var str1 = "[";
			s += "\t";
			var _g11 = 0;
			var _g2 = l;
			while(_g11 < _g2) {
				var i2 = _g11++;
				str1 += (i2 > 0 ? "," : "") + js_Boot.__string_rec(o[i2],s);
			}
			str1 += "]";
			return str1;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e ) {
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str2 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str2.length != 2) {
			str2 += ", \n";
		}
		str2 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str2 += "\n" + s + "}";
		return str2;
	case "string":
		return o;
	default:
		return String(o);
	}
};
js_Boot.__interfLoop = function(cc,cl) {
	if(cc == null) {
		return false;
	}
	if(cc == cl) {
		return true;
	}
	var intf = cc.__interfaces__;
	if(intf != null) {
		var _g1 = 0;
		var _g = intf.length;
		while(_g1 < _g) {
			var i = _g1++;
			var i1 = intf[i];
			if(i1 == cl || js_Boot.__interfLoop(i1,cl)) {
				return true;
			}
		}
	}
	return js_Boot.__interfLoop(cc.__super__,cl);
};
js_Boot.__instanceof = function(o,cl) {
	if(cl == null) {
		return false;
	}
	switch(cl) {
	case Array:
		if((o instanceof Array)) {
			return o.__enum__ == null;
		} else {
			return false;
		}
		break;
	case Bool:
		return typeof(o) == "boolean";
	case Dynamic:
		return true;
	case Float:
		return typeof(o) == "number";
	case Int:
		if(typeof(o) == "number") {
			return (o|0) === o;
		} else {
			return false;
		}
		break;
	case String:
		return typeof(o) == "string";
	default:
		if(o != null) {
			if(typeof(cl) == "function") {
				if(o instanceof cl) {
					return true;
				}
				if(js_Boot.__interfLoop(js_Boot.getClass(o),cl)) {
					return true;
				}
			} else if(typeof(cl) == "object" && js_Boot.__isNativeObj(cl)) {
				if(o instanceof cl) {
					return true;
				}
			}
		} else {
			return false;
		}
		if(cl == Class ? o.__name__ != null : false) {
			return true;
		}
		if(cl == Enum ? o.__ename__ != null : false) {
			return true;
		}
		return o.__enum__ == cl;
	}
};
js_Boot.__cast = function(o,t) {
	if(js_Boot.__instanceof(o,t)) {
		return o;
	} else {
		throw new js__$Boot_HaxeError("Cannot cast " + Std.string(o) + " to " + Std.string(t));
	}
};
js_Boot.__nativeClassName = function(o) {
	var name = js_Boot.__toStr.call(o).slice(8,-1);
	if(name == "Object" || name == "Function" || name == "Math" || name == "JSON") {
		return null;
	}
	return name;
};
js_Boot.__isNativeObj = function(o) {
	return js_Boot.__nativeClassName(o) != null;
};
js_Boot.__resolveNativeClass = function(name) {
	return $global[name];
};
var scout_Observable = function() { };
scout_Observable.__name__ = true;
scout_Observable.prototype = {
	__class__: scout_Observable
};
var scout_Stateful = function() { };
scout_Stateful.__name__ = true;
scout_Stateful.__interfaces__ = [scout_Observable];
scout_Stateful.prototype = {
	__class__: scout_Stateful
};
var scout_Child = function(parent,view) {
	var this1 = { slots : []};
	this.signal = this1;
	this.parent = parent;
	if(view != null) {
		view.setParent(this.parent);
		this.view = view;
	}
};
scout_Child.__name__ = true;
scout_Child.__interfaces__ = [scout_Stateful];
scout_Child.prototype = {
	set: function(view) {
		if(this.view == view) {
			return;
		}
		if(this.view != null) {
			this.view.detachFromParent();
		}
		this.view = view;
		this.view.setParent(this.parent);
		scout__$Signal_Signal_$Impl_$.dispatch(this.signal,this.view);
	}
	,get: function() {
		return this.view;
	}
	,subscribe: function(cb) {
		return scout__$Signal_Signal_$Impl_$.add(this.signal,cb);
	}
	,__class__: scout_Child
};
var scout_Dom = function() { };
scout_Dom.__name__ = true;
scout_Dom.delegate = function(el,selector,type,cb,useCapture) {
	var listener = function(e) {
		var del = scout_Dom.closest(e.target,selector);
		if(del != null) {
			cb(e);
		}
	};
	if(selector == null) {
		listener = cb;
	}
	el.addEventListener(type,listener,useCapture);
	return { destroy : function() {
		el.removeEventListener(type,listener,useCapture);
	}};
};
scout_Dom.select = function(sel) {
	return window.document.querySelector(sel);
};
scout_Dom.selectAll = function(sel) {
	return window.document.querySelectorAll(sel);
};
scout_Dom.closest = function(el,selector) {
	while(el != null && el.nodeType != scout_Dom.docNodeType) {
		if(el.matches(selector)) {
			return el;
		}
		el = el.parentNode;
	}
	if(el == null || el.nodeType == scout_Dom.docNodeType) {
		return null;
	}
	return el;
};
scout_Dom.html = function(el,html) {
	el.innerHTML = html;
	return el;
};
var scout_Renderable = function() { };
scout_Renderable.__name__ = true;
scout_Renderable.prototype = {
	__class__: scout_Renderable
};
var scout_Element = function(tag,attrs,children) {
	this.children = [];
	this.attrs = new haxe_ds_StringMap();
	this.classes = [];
	this.set_tag(tag);
	this.children = children;
	var _g = 0;
	var _g1 = Reflect.fields(attrs);
	while(_g < _g1.length) {
		var field = _g1[_g];
		++_g;
		if(field == "className") {
			this.addClass(Reflect.field(attrs,field));
		} else {
			this.addAttribute(field,Reflect.field(attrs,field));
		}
	}
};
scout_Element.__name__ = true;
scout_Element.__interfaces__ = [scout_Renderable];
scout_Element.prototype = {
	set_tag: function(tag) {
		if(scout_Element.tagNames.indexOf(tag) <= 0) {
			throw new js__$Boot_HaxeError("Invalid tag name: ${tag}");
		}
		this.tag = tag;
		return tag;
	}
	,addClass: function(cls) {
		this.classes.push(cls);
	}
	,removeClass: function(cls) {
		this.classes = this.classes.filter(function(c) {
			return c != cls;
		});
	}
	,addAttribute: function(name,value) {
		if(name == "class") {
			this.addClass(value);
			return;
		}
		var _this = this.attrs;
		if(__map_reserved[name] != null) {
			_this.setReserved(name,value);
		} else {
			_this.h[name] = value;
		}
	}
	,removeAttribute: function(name) {
		this.attrs.remove(name);
	}
	,render: function() {
		if(this.children.length == 0 && scout_Element.voidTags.indexOf(this.tag) >= 0) {
			return scout__$RenderResult_RenderResult_$Impl_$._new("<" + this.tag + this.renderAttrs() + "/>");
		}
		return scout__$RenderResult_RenderResult_$Impl_$._new("<" + this.tag + this.renderAttrs() + ">" + this.children.map(function(s) {
			if(js_Boot.__instanceof(s,scout_Renderable)) {
				return (js_Boot.__cast(s , scout_Renderable)).toRenderResult();
			} else {
				return StringTools.htmlEscape(Std.string(s));
			}
		}).join("") + "</" + this.tag + ">");
	}
	,renderAttrs: function() {
		var _g = [];
		var key = this.attrs.keys();
		while(key.hasNext()) {
			var key1 = key.next();
			var _this = this.attrs;
			var value = __map_reserved[key1] != null ? _this.getReserved(key1) : _this.h[key1];
			_g.push(typeof(value) == "boolean" ? js_Boot.__cast(value , Bool) == true ? key1 : null : "" + key1 + "=\"" + StringTools.htmlEscape(Std.string(value)) + "\"");
		}
		var entries = _g.filter(function(entry) {
			return entry != null;
		});
		if(this.classes.length > 0) {
			entries.unshift("class=\"" + this.classes.join(" ") + "\"");
		}
		if(entries.length > 0) {
			return " " + entries.join(" ");
		} else {
			return "";
		}
	}
	,toRenderResult: function() {
		return this.render();
	}
	,__class__: scout_Element
};
var scout_Model = function() { };
scout_Model.__name__ = true;
scout_Model.__interfaces__ = [scout_Observable];
scout_Model.prototype = {
	__class__: scout_Model
};
var scout_ModelCollection = function(init) {
	this.modelListeners = new haxe_ds_ObjectMap();
	var this1 = { slots : []};
	this.onChange = this1;
	var this11 = { slots : []};
	this.onRemove = this11;
	var this12 = { slots : []};
	this.onAdd = this12;
	this.models = init != null ? init : [];
};
scout_ModelCollection.__name__ = true;
scout_ModelCollection.__interfaces__ = [scout_Observable];
scout_ModelCollection.prototype = {
	get_length: function() {
		return this.models.length;
	}
	,subscribe: function(cb) {
		return scout__$Signal_Signal_$Impl_$.add(this.onChange,cb);
	}
	,add: function(model) {
		var _gthis = this;
		if(!Lambda.has(this.models,model)) {
			this.models.push(model);
			this.modelListeners.set(model,model.subscribe(function(_) {
				scout__$Signal_Signal_$Impl_$.dispatch(_gthis.onChange,_gthis);
			}));
			scout__$Signal_Signal_$Impl_$.dispatch(this.onAdd,model);
			scout__$Signal_Signal_$Impl_$.dispatch(this.onChange,this);
		}
		return this;
	}
	,indexOf: function(model) {
		return this.models.indexOf(model);
	}
	,filter: function(f) {
		return this.models.filter(f);
	}
	,exists: function(model) {
		return Lambda.has(this.models,model);
	}
	,idExists: function(id) {
		return Lambda.exists(this.models,function(m) {
			return m.get_id() == id;
		});
	}
	,has: function(elt) {
		return Lambda.exists(this.models,elt);
	}
	,find: function(elt) {
		return Lambda.find(this.models,elt);
	}
	,get: function(id) {
		return Lambda.find(this.models,function(m) {
			return m.get_id() == id;
		});
	}
	,getAt: function(index) {
		return this.models[index];
	}
	,each: function(cb) {
		Lambda.foreach(this.models,cb);
		return this;
	}
	,map: function(cb) {
		return this.models.map(cb);
	}
	,iterator: function() {
		return HxOverrides.iter(this.models);
	}
	,remove: function(model) {
		if(this.modelListeners.h.__keys__[model.__id__] != null) {
			var this1 = this.modelListeners.h[model.__id__];
			var this2 = this1.signal;
			var listener = this1.listener;
			this2.slots = this2.slots.filter(function(slot) {
				return slot.listener != listener;
			});
			this.modelListeners.remove(model);
		}
		if(Lambda.exists(this.models,function(m) {
			return m.get_id() == model.get_id();
		})) {
			this.models = this.models.filter(function(m1) {
				return m1.get_id() != model.get_id();
			});
			scout__$Signal_Signal_$Impl_$.dispatch(this.onRemove,model);
			scout__$Signal_Signal_$Impl_$.dispatch(this.onChange,this);
		}
		return this;
	}
	,removeById: function(id) {
		var id1 = id;
		var model = Lambda.find(this.models,function(m) {
			return m.get_id() == id1;
		});
		if(model != null) {
			this.remove(model);
		}
		return this;
	}
	,__class__: scout_ModelCollection
};
var scout_ObservableState = function(value) {
	var this1 = { slots : []};
	this.signal = this1;
	var _gthis = this;
	if(value != null) {
		this.value = value;
		this.lastSlot = value.subscribe(function(_) {
			scout__$Signal_Signal_$Impl_$.dispatch(_gthis.signal,value);
		});
	}
};
scout_ObservableState.__name__ = true;
scout_ObservableState.__interfaces__ = [scout_Stateful];
scout_ObservableState.prototype = {
	set: function(value) {
		var _gthis = this;
		if(this.value == value) {
			return;
		}
		this.value = value;
		if(this.lastSlot != null) {
			var this1 = this.lastSlot;
			var this2 = this1.signal;
			var listener = this1.listener;
			this2.slots = this2.slots.filter(function(slot) {
				return slot.listener != listener;
			});
		}
		this.lastSlot = value.subscribe(function(_) {
			scout__$Signal_Signal_$Impl_$.dispatch(_gthis.signal,value);
		});
		scout__$Signal_Signal_$Impl_$.dispatch(this.signal,value);
	}
	,get: function() {
		return this.value;
	}
	,subscribe: function(cb) {
		return scout__$Signal_Signal_$Impl_$.add(this.signal,cb);
	}
	,__class__: scout_ObservableState
};
var scout__$RenderResult_RenderResult_$Impl_$ = {};
scout__$RenderResult_RenderResult_$Impl_$.__name__ = true;
scout__$RenderResult_RenderResult_$Impl_$._new = function(str) {
	var this1 = str;
	return this1;
};
scout__$RenderResult_RenderResult_$Impl_$.ofRenderable = function(renderable) {
	return renderable.toRenderResult();
};
var scout__$Signal_SignalSlot_$Impl_$ = {};
scout__$Signal_SignalSlot_$Impl_$.__name__ = true;
scout__$Signal_SignalSlot_$Impl_$._new = function(listener,signal,once) {
	if(once == null) {
		once = false;
	}
	var this1 = { listener : listener, signal : signal, once : once};
	return this1;
};
scout__$Signal_SignalSlot_$Impl_$.remove = function(this1) {
	var this2 = this1.signal;
	var listener = this1.listener;
	this2.slots = this2.slots.filter(function(slot) {
		return slot.listener != listener;
	});
};
var scout__$Signal_Signal_$Impl_$ = {};
scout__$Signal_Signal_$Impl_$.__name__ = true;
scout__$Signal_Signal_$Impl_$.observe = function(signal,cb) {
	scout__$Signal_Signal_$Impl_$.add(signal,cb);
};
scout__$Signal_Signal_$Impl_$.ofStateful = function(state) {
	return state.signal;
};
scout__$Signal_Signal_$Impl_$._new = function() {
	var this1 = { slots : []};
	return this1;
};
scout__$Signal_Signal_$Impl_$.add = function(this1,listener,once) {
	if(once == null) {
		once = false;
	}
	var this2 = { listener : listener, signal : this1, once : once};
	var slot = this2;
	this1.slots.push(slot);
	return slot;
};
scout__$Signal_Signal_$Impl_$.once = function(this1,listener) {
	return scout__$Signal_Signal_$Impl_$.add(this1,listener,true);
};
scout__$Signal_Signal_$Impl_$.remove = function(this1,listener) {
	this1.slots = this1.slots.filter(function(slot) {
		return slot.listener != listener;
	});
};
scout__$Signal_Signal_$Impl_$.dispatch = function(this1,data) {
	var _g = 0;
	var _g1 = this1.slots;
	while(_g < _g1.length) {
		var slot = _g1[_g];
		++_g;
		slot.listener(data);
		if(slot.once) {
			var this2 = slot.signal;
			this2.slots = this2.slots.filter((function(listener) {
				return function(slot1) {
					return slot1.listener != listener[0];
				};
			})([slot.listener]));
		}
	}
};
var scout_State = function(value) {
	var this1 = { slots : []};
	this.signal = this1;
	this.value = value;
};
scout_State.__name__ = true;
scout_State.__interfaces__ = [scout_Stateful];
scout_State.prototype = {
	set: function(value) {
		if(this.value == value) {
			return;
		}
		this.value = value;
		scout__$Signal_Signal_$Impl_$.dispatch(this.signal,this.value);
	}
	,get: function() {
		return this.value;
	}
	,subscribe: function(cb) {
		return scout__$Signal_Signal_$Impl_$.add(this.signal,cb);
	}
	,__class__: scout_State
};
var scout__$Template_SafeContent = function(content) {
	this.content = content;
};
scout__$Template_SafeContent.__name__ = true;
scout__$Template_SafeContent.__interfaces__ = [scout_Renderable];
scout__$Template_SafeContent.prototype = {
	toRenderResult: function() {
		return this.content;
	}
	,__class__: scout__$Template_SafeContent
};
var scout_Template = function() { };
scout_Template.__name__ = true;
scout_Template.safe = function(str) {
	return new scout__$Template_SafeContent(str);
};
var scout_View = function() {
	this.parentListeners = [];
	var this1 = { slots : []};
	this.onRemove = this1;
	var this11 = { slots : []};
	this.onReady = this11;
	var this12 = { slots : []};
	this.afterRender = this12;
	var this13 = { slots : []};
	this.beforeRender = this13;
	this.cid = "__scout_view_" + scout_View.autoIdIndex++;
	this.delegatedEvents = [];
	this.events = [];
};
scout_View.__name__ = true;
scout_View.__interfaces__ = [scout_Renderable];
scout_View.prototype = {
	set_el: function(el) {
		if(this.delegatedEvents.length > 0) {
			this.undelegateEvents();
		}
		this.el = el;
		if(this.events.length > 0) {
			this.delegateEvents(this.events);
		}
		return el;
	}
	,get_content: function() {
		return this.el.outerHTML;
	}
	,set_content: function(content) {
		return this.el.innerHTML = content;
	}
	,get_isReady: function() {
		return window.document.contains(this.el);
	}
	,__scout_render: function() {
		return scout__$RenderResult_RenderResult_$Impl_$._new("");
	}
	,__scout_doRender: function() {
		this.set_content(this.__scout_render());
	}
	,shouldRender: function() {
		return true;
	}
	,render: function() {
		if(this.shouldRender()) {
			scout__$Signal_Signal_$Impl_$.dispatch(this.beforeRender,this);
			this.__scout_doRender();
			scout__$Signal_Signal_$Impl_$.dispatch(this.afterRender,this);
		}
		return this;
	}
	,setParent: function(view) {
		var _gthis = this;
		this.detachFromParent();
		this.parent = view;
		this.parentListeners = [scout__$Signal_Signal_$Impl_$.add(this.parent.onRemove,function(_) {
			_gthis.remove();
		}),scout__$Signal_Signal_$Impl_$.add(this.parent.beforeRender,function(_1) {
			_gthis.detach();
		}),scout__$Signal_Signal_$Impl_$.add(this.parent.afterRender,function(_2) {
			_gthis.attach();
		})];
	}
	,detachFromParent: function() {
		var _g = 0;
		var _g1 = this.parentListeners;
		while(_g < _g1.length) {
			var listener = _g1[_g];
			++_g;
			var this2 = listener.signal;
			this2.slots = this2.slots.filter((function(listener1) {
				return function(slot) {
					return slot.listener != listener1[0];
				};
			})([listener.listener]));
		}
		this.parentListeners = [];
		this.detach();
		this.parent = null;
	}
	,toRenderResult: function() {
		if(this.parent != null) {
			return scout__$RenderResult_RenderResult_$Impl_$._new("<div id=\"" + StringTools.htmlEscape(Std.string(this.cid)) + "\"></div>");
		}
		return this.render().get_content();
	}
	,attach: function() {
		if(this.parent == null) {
			return;
		}
		var target = this.parent.el.querySelector("#" + this.cid);
		if(target != null) {
			target.parentNode.replaceChild(this.render().el,target);
		}
	}
	,detach: function() {
		if(this.el.parentElement != null) {
			this.el.parentElement.removeChild(this.el);
		}
	}
	,remove: function() {
		scout__$Signal_Signal_$Impl_$.dispatch(this.onRemove,this);
		this.undelegateEvents();
		this.el.remove();
	}
	,delegateEvents: function(events) {
		var _g = 0;
		while(_g < events.length) {
			var event = events[_g];
			++_g;
			var e = scout_Dom.delegate(this.el,event.selector,event.action,event.method);
			this.delegatedEvents.push(e);
		}
	}
	,undelegateEvents: function() {
		var _g = 0;
		var _g1 = this.delegatedEvents;
		while(_g < _g1.length) {
			var binding = _g1[_g];
			++_g;
			binding.destroy();
		}
		this.delegatedEvents = [];
	}
	,__class__: scout_View
};
var scout_component_ListView = function(attrs) {
	scout_View.call(this);
	this.states = { };
	this.states.tag = new scout_State(attrs.tag != null ? attrs.tag : "ul");
	this.states.className = new scout_State(attrs.className != null ? attrs.className : "list");
	this.states.items = new scout_State(attrs.items != null ? attrs.items : []);
	this.states.sel = new scout_State(attrs.sel);
	this.ensureElement();
	this.initItems();
	this.delegateEvents(this.events);
};
scout_component_ListView.__name__ = true;
scout_component_ListView.__super__ = scout_View;
scout_component_ListView.prototype = $extend(scout_View.prototype,{
	initItems: function() {
		var _g = 0;
		var _g1 = this.states.items.get();
		while(_g < _g1.length) {
			var item = _g1[_g];
			++_g;
			this.add(item);
		}
	}
	,add: function(item) {
		item.setParent(this);
		if(!Lambda.has(this.states.items.get(),item)) {
			this.states.items.get().push(item);
		}
		this.render();
	}
	,'delete': function(item) {
		if(Lambda.has(this.states.items.get(),item)) {
			item.remove();
			var value = this.states.items.get().filter(function(i) {
				return i != item;
			});
			this.states.items.set(value);
			this.render();
		}
	}
	,__scout_render: function() {
		return scout__$RenderResult_RenderResult_$Impl_$._new("" + this.states.items.get().map(function(r) {
			return r.toRenderResult();
		}).join(""));
	}
	,ensureElement: function() {
		if(this.states.sel.get() != null) {
			this.set_el(window.document.querySelector(this.states.sel.get()));
		}
		if(this.el == null) {
			this.set_el(window.document.createElement(this.states.tag.get()));
			this.el.setAttribute("class",this.states.className.get());
		}
	}
	,get_tag: function() {
		return this.states.tag.get();
	}
	,set_tag: function(value) {
		this.states.tag.set(value);
		return value;
	}
	,get_className: function() {
		return this.states.className.get();
	}
	,set_className: function(value) {
		this.states.className.set(value);
		return value;
	}
	,get_items: function() {
		return this.states.items.get();
	}
	,set_items: function(value) {
		this.states.items.set(value);
		return value;
	}
	,get_sel: function() {
		return this.states.sel.get();
	}
	,set_sel: function(value) {
		this.states.sel.set(value);
		return value;
	}
	,__class__: scout_component_ListView
});
var todo_model_VisibleTodos = { __ename__ : true, __constructs__ : ["VisibleAll","VisibleCompleted","VisiblePending"] };
todo_model_VisibleTodos.VisibleAll = ["VisibleAll",0];
todo_model_VisibleTodos.VisibleAll.__enum__ = todo_model_VisibleTodos;
todo_model_VisibleTodos.VisibleCompleted = ["VisibleCompleted",1];
todo_model_VisibleTodos.VisibleCompleted.__enum__ = todo_model_VisibleTodos;
todo_model_VisibleTodos.VisiblePending = ["VisiblePending",2];
todo_model_VisibleTodos.VisiblePending.__enum__ = todo_model_VisibleTodos;
var todo_model_Store = function(props) {
	this.silent = false;
	var this1 = { slots : []};
	this.onChange = this1;
	var _gthis = this;
	this.states = { };
	this.states.todos = new scout_ObservableState(props.todos);
	this.states.editing = new scout_State(props.editing);
	this.states.visible = new scout_State(props.visible != null ? props.visible : todo_model_VisibleTodos.VisibleAll);
	this.states.todosRemaining = new scout_State(props.todosRemaining);
	this.states.id = new scout_State(props.id != null ? props.id : todo_model_Store.__scout_ids++);
	this.states.todos.subscribe(function(_) {
		if(!_gthis.silent) {
			scout__$Signal_Signal_$Impl_$.dispatch(_gthis.onChange,_gthis);
		}
	});
	this.states.editing.subscribe(function(_1) {
		if(!_gthis.silent) {
			scout__$Signal_Signal_$Impl_$.dispatch(_gthis.onChange,_gthis);
		}
	});
	this.states.visible.subscribe(function(_2) {
		if(!_gthis.silent) {
			scout__$Signal_Signal_$Impl_$.dispatch(_gthis.onChange,_gthis);
		}
	});
	this.states.todosRemaining.subscribe(function(_3) {
		if(!_gthis.silent) {
			scout__$Signal_Signal_$Impl_$.dispatch(_gthis.onChange,_gthis);
		}
	});
	this.__scout_init_todosRemaining();
	this.states.todos.subscribe(function(_4) {
		_gthis.__scout_init_todosRemaining();
	});
	this.states.id.subscribe(function(_5) {
		if(!_gthis.silent) {
			scout__$Signal_Signal_$Impl_$.dispatch(_gthis.onChange,_gthis);
		}
	});
};
todo_model_Store.__name__ = true;
todo_model_Store.__interfaces__ = [scout_Model];
todo_model_Store.prototype = {
	get_todos: function() {
		return this.states.todos.get();
	}
	,set_todos: function(value) {
		this.states.todos.set(value);
		return value;
	}
	,get_editing: function() {
		return this.states.editing.get();
	}
	,set_editing: function(value) {
		this.states.editing.set(value);
		return value;
	}
	,get_visible: function() {
		return this.states.visible.get();
	}
	,set_visible: function(value) {
		this.states.visible.set(value);
		return value;
	}
	,get_todosRemaining: function() {
		return this.states.todosRemaining.get();
	}
	,__scout_init_todosRemaining: function() {
		this.states.todosRemaining.set(this.states.todos.get().models.filter(function(todo1) {
			return !todo1.states.completed.get();
		}).length);
	}
	,get_id: function() {
		return this.states.id.get();
	}
	,set_id: function(value) {
		this.states.id.set(value);
		return value;
	}
	,subscribe: function(listener) {
		return scout__$Signal_Signal_$Impl_$.add(this.onChange,listener);
	}
	,__class__: todo_model_Store
};
var todo_model_Todo = function(props) {
	this.silent = false;
	var this1 = { slots : []};
	this.onChange = this1;
	var _gthis = this;
	this.states = { };
	this.states.label = new scout_State(props.label);
	this.states.completed = new scout_State(props.completed != null && props.completed);
	this.states.editing = new scout_State(props.editing != null && props.editing);
	this.states.id = new scout_State(props.id != null ? props.id : todo_model_Todo.__scout_ids++);
	this.states.label.subscribe(function(_) {
		if(!_gthis.silent) {
			scout__$Signal_Signal_$Impl_$.dispatch(_gthis.onChange,_gthis);
		}
	});
	this.states.completed.subscribe(function(_1) {
		if(!_gthis.silent) {
			scout__$Signal_Signal_$Impl_$.dispatch(_gthis.onChange,_gthis);
		}
	});
	this.states.editing.subscribe(function(_2) {
		if(!_gthis.silent) {
			scout__$Signal_Signal_$Impl_$.dispatch(_gthis.onChange,_gthis);
		}
	});
	this.states.id.subscribe(function(_3) {
		if(!_gthis.silent) {
			scout__$Signal_Signal_$Impl_$.dispatch(_gthis.onChange,_gthis);
		}
	});
};
todo_model_Todo.__name__ = true;
todo_model_Todo.__interfaces__ = [scout_Model];
todo_model_Todo.prototype = {
	get_label: function() {
		return this.states.label.get();
	}
	,set_label: function(value) {
		this.states.label.set(value);
		return value;
	}
	,get_completed: function() {
		return this.states.completed.get();
	}
	,set_completed: function(value) {
		this.states.completed.set(value);
		return value;
	}
	,get_editing: function() {
		return this.states.editing.get();
	}
	,set_editing: function(value) {
		this.states.editing.set(value);
		return value;
	}
	,get_id: function() {
		return this.states.id.get();
	}
	,set_id: function(value) {
		this.states.id.set(value);
		return value;
	}
	,subscribe: function(listener) {
		return scout__$Signal_Signal_$Impl_$.add(this.onChange,listener);
	}
	,__class__: todo_model_Todo
};
var todo_view_App = function(attrs) {
	scout_View.call(this);
	this.states = { };
	this.states.title = new scout_State(attrs.title);
	this.states.store = new scout_State(attrs.store);
	this.states.id = new scout_State(attrs.id != null ? attrs.id : "App");
	this.states.className = new scout_State(attrs.className);
	this.states.tag = new scout_State(attrs.tag != null ? attrs.tag : "div");
	this.states.sel = new scout_State(attrs.sel);
	this.ensureElement();
	var tmp = attrs.header != null ? attrs.header : new todo_view_Header({ title : this.states.title.get(), store : this.states.store.get()});
	this.states.header = new scout_Child(this,tmp);
	var tmp1 = attrs.list != null ? attrs.list : new todo_view_TodoList({ store : this.states.store.get()});
	this.states.list = new scout_Child(this,tmp1);
	this.delegateEvents(this.events);
};
todo_view_App.__name__ = true;
todo_view_App.__super__ = scout_View;
todo_view_App.prototype = $extend(scout_View.prototype,{
	__scout_render: function() {
		return scout__$RenderResult_RenderResult_$Impl_$._new("\r\n    <div class=\"todoapp\">\r\n      " + this.states.header.get().toRenderResult() + "\r\n      " + this.states.list.get().toRenderResult() + "\r\n    </div>\r\n    <footer class=\"info\">\r\n      <p>Double-click to edit a todo.</p>\r\n      <p>Written by <a href=\"https://github.com/wartman\">wartman</a></p>\r\n      <p>Part of <a href=\"http://todomvc.com\">TodoMVC</a></p>\r\n    </footer>\r\n  ");
	}
	,ensureElement: function() {
		if(this.states.sel.get() != null) {
			this.set_el(window.document.querySelector(this.states.sel.get()));
		}
		if(this.el == null) {
			this.set_el(window.document.createElement(this.states.tag.get()));
			this.el.setAttribute("id",this.states.id.get());
			this.el.setAttribute("class",this.states.className.get());
		}
	}
	,get_title: function() {
		return this.states.title.get();
	}
	,set_title: function(value) {
		this.states.title.set(value);
		return value;
	}
	,get_store: function() {
		return this.states.store.get();
	}
	,set_store: function(value) {
		this.states.store.set(value);
		return value;
	}
	,get_id: function() {
		return this.states.id.get();
	}
	,set_id: function(value) {
		this.states.id.set(value);
		return value;
	}
	,get_header: function() {
		return this.states.header.get();
	}
	,set_header: function(value) {
		this.states.header.set(value);
		return value;
	}
	,get_list: function() {
		return this.states.list.get();
	}
	,set_list: function(value) {
		this.states.list.set(value);
		return value;
	}
	,get_className: function() {
		return this.states.className.get();
	}
	,set_className: function(value) {
		this.states.className.set(value);
		return value;
	}
	,get_tag: function() {
		return this.states.tag.get();
	}
	,set_tag: function(value) {
		this.states.tag.set(value);
		return value;
	}
	,get_sel: function() {
		return this.states.sel.get();
	}
	,set_sel: function(value) {
		this.states.sel.set(value);
		return value;
	}
	,__class__: todo_view_App
});
var todo_view_Header = function(attrs) {
	scout_View.call(this);
	this.states = { };
	this.states.tag = new scout_State(attrs.tag != null ? attrs.tag : "header");
	this.states.className = new scout_State(attrs.className != null ? attrs.className : "header");
	this.states.title = new scout_State(attrs.title);
	this.states.store = new scout_State(attrs.store);
	this.states.sel = new scout_State(attrs.sel);
	this.ensureElement();
	this.events.push({ selector : ".new-todo", action : "keydown", method : $bind(this,this.handleSubmit)});
	this.delegateEvents(this.events);
};
todo_view_Header.__name__ = true;
todo_view_Header.__super__ = scout_View;
todo_view_Header.prototype = $extend(scout_View.prototype,{
	handleSubmit: function(e) {
		if((js_Boot.__cast(e , KeyboardEvent)).key == "Enter") {
			e.preventDefault();
			var target = e.target;
			this.states.store.get().states.todos.get().add(new todo_model_Todo({ label : target.value}));
			target.value = "";
		}
	}
	,__scout_render: function() {
		return scout__$RenderResult_RenderResult_$Impl_$._new("\r\n    <h1>" + StringTools.htmlEscape(Std.string(this.states.title.get())) + "</h1>\r\n    <input class=\"new-todo\" placeholder=\"What needs doing?\" />\r\n  ");
	}
	,ensureElement: function() {
		if(this.states.sel.get() != null) {
			this.set_el(window.document.querySelector(this.states.sel.get()));
		}
		if(this.el == null) {
			this.set_el(window.document.createElement(this.states.tag.get()));
			this.el.setAttribute("class",this.states.className.get());
		}
	}
	,get_tag: function() {
		return this.states.tag.get();
	}
	,set_tag: function(value) {
		this.states.tag.set(value);
		return value;
	}
	,get_className: function() {
		return this.states.className.get();
	}
	,set_className: function(value) {
		this.states.className.set(value);
		return value;
	}
	,get_title: function() {
		return this.states.title.get();
	}
	,set_title: function(value) {
		this.states.title.set(value);
		return value;
	}
	,get_store: function() {
		return this.states.store.get();
	}
	,set_store: function(value) {
		this.states.store.set(value);
		return value;
	}
	,get_sel: function() {
		return this.states.sel.get();
	}
	,set_sel: function(value) {
		this.states.sel.set(value);
		return value;
	}
	,__class__: todo_view_Header
});
var todo_view_TodoItem = function(attrs) {
	scout_View.call(this);
	this.states = { };
	this.states.className = new scout_State(attrs.className != null ? attrs.className : "todo-item");
	this.states.id = new scout_State(attrs.id);
	this.states.tag = new scout_State(attrs.tag != null ? attrs.tag : "li");
	this.states.todo = new scout_State(attrs.todo);
	this.states.store = new scout_State(attrs.store);
	this.states.sel = new scout_State(attrs.sel);
	this.ensureElement();
	this.initializeVisibility();
	scout__$Signal_Signal_$Impl_$.observe(scout__$Signal_Signal_$Impl_$.ofStateful(this.states.todo.get().states.editing),$bind(this,this.toggleEditMode));
	scout__$Signal_Signal_$Impl_$.observe(scout__$Signal_Signal_$Impl_$.ofStateful(this.states.store.get().states.visible),$bind(this,this.isVisible));
	scout__$Signal_Signal_$Impl_$.observe(scout__$Signal_Signal_$Impl_$.ofStateful(this.states.todo.get().states.completed),$bind(this,this.isVisible));
	this.events.push({ selector : ".edit", action : "keydown", method : $bind(this,this.doneEditing)});
	this.events.push({ selector : ".edit", action : "blur", method : $bind(this,this.bluredEdit)});
	this.events.push({ selector : null, action : "dblclick", method : $bind(this,this.edit)});
	this.events.push({ selector : ".toggle", action : "change", method : $bind(this,this.toggleCompleted)});
	this.events.push({ selector : ".destroy", action : "click", method : $bind(this,this.removeTodo)});
	this.delegateEvents(this.events);
};
todo_view_TodoItem.__name__ = true;
todo_view_TodoItem.__super__ = scout_View;
todo_view_TodoItem.prototype = $extend(scout_View.prototype,{
	initializeVisibility: function() {
		this.isVisible(this.states.store.get().states.visible.get());
	}
	,doneEditing: function(e) {
		if((js_Boot.__cast(e , KeyboardEvent)).key == "Enter") {
			e.preventDefault();
			this.update();
		}
	}
	,bluredEdit: function(e) {
		this.update();
	}
	,update: function() {
		this.states.todo.get().set_label((js_Boot.__cast(this.el.querySelector(".edit") , HTMLInputElement)).value);
		this.states.todo.get().set_editing(false);
		this.render();
	}
	,edit: function(e) {
		this.states.todo.get().set_editing(true);
	}
	,toggleCompleted: function(e) {
		e.stopPropagation();
		this.states.todo.get().set_completed(!this.states.todo.get().states.completed.get());
		if(this.states.todo.get().states.completed.get()) {
			this.el.classList.add("completed");
		} else {
			this.el.classList.remove("completed");
		}
	}
	,removeTodo: function(e) {
		e.preventDefault();
		this.states.store.get().states.todos.get().remove(this.states.todo.get());
	}
	,toggleEditMode: function(_) {
		if(this.states.todo.get().states.editing.get()) {
			this.el.classList.add("editing");
			this.el.querySelector(".edit").focus();
		} else {
			this.el.classList.remove("editing");
		}
	}
	,isVisible: function(_) {
		var _g = this.states.store.get().states.visible.get();
		switch(_g[1]) {
		case 0:
			this.show();
			break;
		case 1:
			if(this.states.todo.get().states.completed.get()) {
				this.show();
			} else {
				this.hide();
			}
			break;
		case 2:
			if(this.states.todo.get().states.completed.get()) {
				this.hide();
			} else {
				this.show();
			}
			break;
		}
	}
	,show: function() {
		this.el.setAttribute("style","display:block;");
	}
	,hide: function() {
		this.el.setAttribute("style","display:none;");
	}
	,__scout_render: function() {
		return scout__$RenderResult_RenderResult_$Impl_$._new("\r\n    <input class=\"edit\" type=\"text\" value=\"" + StringTools.htmlEscape(Std.string(this.states.todo.get().states.label.get())) + "\" />\r\n    <div class=\"view\">\r\n      <input class=\"toggle\" type=\"checkbox\"" + StringTools.htmlEscape(this.states.todo.get().states.completed.get() ? " checked" : "") + " />\r\n      <label>" + StringTools.htmlEscape(Std.string(this.states.todo.get().states.label.get())) + "</label>\r\n      <button class=\"destroy\"></button>\r\n    </div>\r\n  ");
	}
	,ensureElement: function() {
		if(this.states.sel.get() != null) {
			this.set_el(window.document.querySelector(this.states.sel.get()));
		}
		if(this.el == null) {
			this.set_el(window.document.createElement(this.states.tag.get()));
			this.el.setAttribute("id",this.states.id.get());
			this.el.setAttribute("class",this.states.className.get());
		}
	}
	,get_className: function() {
		return this.states.className.get();
	}
	,set_className: function(value) {
		this.states.className.set(value);
		return value;
	}
	,get_id: function() {
		return this.states.id.get();
	}
	,set_id: function(value) {
		this.states.id.set(value);
		return value;
	}
	,get_tag: function() {
		return this.states.tag.get();
	}
	,set_tag: function(value) {
		this.states.tag.set(value);
		return value;
	}
	,get_todo: function() {
		return this.states.todo.get();
	}
	,set_todo: function(value) {
		this.states.todo.set(value);
		return value;
	}
	,get_store: function() {
		return this.states.store.get();
	}
	,set_store: function(value) {
		this.states.store.set(value);
		return value;
	}
	,get_sel: function() {
		return this.states.sel.get();
	}
	,set_sel: function(value) {
		this.states.sel.set(value);
		return value;
	}
	,__class__: todo_view_TodoItem
});
var todo_view_TodoList = function(attrs) {
	this.shouldInitializeFooter = true;
	scout_View.call(this);
	this.states = { };
	this.states.className = new scout_State(attrs.className != null ? attrs.className : "todo-list-wrapper");
	this.states.store = new scout_State(attrs.store);
	this.states.tag = new scout_State(attrs.tag != null ? attrs.tag : "div");
	this.states.sel = new scout_State(attrs.sel);
	this.ensureElement();
	var tmp = attrs.body != null ? attrs.body : new scout_component_ListView({ className : "todo-list"});
	this.states.body = new scout_Child(this,tmp);
	this.initializeViews();
	scout__$Signal_Signal_$Impl_$.observe(this.states.store.get().states.todos.get().onAdd,$bind(this,this.addTodo));
	scout__$Signal_Signal_$Impl_$.observe(this.states.store.get().states.todos.get().onRemove,$bind(this,this.removeTodo));
	scout__$Signal_Signal_$Impl_$.observe(scout__$Signal_Signal_$Impl_$.ofStateful(this.states.store.get().states.todosRemaining),$bind(this,this.updateCount));
	this.events.push({ selector : ".filter-all", action : "click", method : $bind(this,this.filterAll)});
	this.events.push({ selector : ".filter-completed", action : "click", method : $bind(this,this.filterCompleted)});
	this.events.push({ selector : ".filter-pending", action : "click", method : $bind(this,this.filterPending)});
	this.delegateEvents(this.events);
};
todo_view_TodoList.__name__ = true;
todo_view_TodoList.__super__ = scout_View;
todo_view_TodoList.prototype = $extend(scout_View.prototype,{
	initializeViews: function() {
		var todo1 = this.states.store.get().states.todos.get().iterator();
		while(todo1.hasNext()) {
			var todo2 = todo1.next();
			this.addTodo(todo2);
		}
	}
	,addTodo: function(todo1) {
		this.states.body.get().add(new todo_view_TodoItem({ sel : "#Todo-" + todo1.states.id.get(), id : "Todo-" + todo1.states.id.get(), todo : todo1, store : this.states.store.get()}));
		if(this.shouldInitializeFooter) {
			this.shouldInitializeFooter = false;
			this.render();
		}
	}
	,removeTodo: function(todo1) {
		var view = Lambda.find(this.states.body.get().states.items.get(),function(view1) {
			return view1.states.todo.get() == todo1;
		});
		if(view != null) {
			this.states.body.get()["delete"](view);
		}
		if(this.states.store.get().states.todos.get().get_length() == 0) {
			this.shouldInitializeFooter = true;
			this.render();
		}
	}
	,updateCount: function(remaining) {
		var count = this.el.querySelector(".todo-count");
		if(count == null) {
			return;
		}
		count.innerHTML = this.todoCount(remaining);
	}
	,filterAll: function(e) {
		this.states.store.get().set_visible(todo_model_VisibleTodos.VisibleAll);
	}
	,filterCompleted: function(e) {
		this.states.store.get().set_visible(todo_model_VisibleTodos.VisibleCompleted);
	}
	,filterPending: function(e) {
		this.states.store.get().set_visible(todo_model_VisibleTodos.VisiblePending);
	}
	,__scout_render: function() {
		return scout__$RenderResult_RenderResult_$Impl_$._new("\r\n    " + this.states.body.get().toRenderResult() + "\r\n    " + this.footer() + "\r\n  ");
	}
	,footer: function() {
		if(this.states.store.get().states.todos.get().get_length() > 0) {
			return scout__$RenderResult_RenderResult_$Impl_$._new("\r\n    <footer class=\"footer\">\r\n      <span class=\"todo-count\">" + this.todoCount(this.states.store.get().states.todosRemaining.get()) + "</span>\r\n      <ul class=\"filters\">\r\n        <li><a href=\"#all\" class=\"filter-all\">All</a></li>\r\n        <li><a href=\"#completed\" class=\"filter-completed\">Completed</a></li>\r\n        <li><a href=\"#pending\" class=\"filter-pending\">Pending</a></li>\r\n      </ul>\r\n    </footer>  \r\n  ");
		} else {
			return scout__$RenderResult_RenderResult_$Impl_$._new("");
		}
	}
	,todoCount: function(remaining) {
		switch(remaining) {
		case 0:
			return scout__$RenderResult_RenderResult_$Impl_$._new("No items left");
		case 1:
			return scout__$RenderResult_RenderResult_$Impl_$._new("1 item left");
		default:
			return scout__$RenderResult_RenderResult_$Impl_$._new("" + StringTools.htmlEscape(remaining == null ? "null" : "" + remaining) + " items left");
		}
	}
	,ensureElement: function() {
		if(this.states.sel.get() != null) {
			this.set_el(window.document.querySelector(this.states.sel.get()));
		}
		if(this.el == null) {
			this.set_el(window.document.createElement(this.states.tag.get()));
			this.el.setAttribute("class",this.states.className.get());
		}
	}
	,get_className: function() {
		return this.states.className.get();
	}
	,set_className: function(value) {
		this.states.className.set(value);
		return value;
	}
	,get_store: function() {
		return this.states.store.get();
	}
	,set_store: function(value) {
		this.states.store.set(value);
		return value;
	}
	,get_body: function() {
		return this.states.body.get();
	}
	,set_body: function(value) {
		this.states.body.set(value);
		return value;
	}
	,get_tag: function() {
		return this.states.tag.get();
	}
	,set_tag: function(value) {
		this.states.tag.set(value);
		return value;
	}
	,get_sel: function() {
		return this.states.sel.get();
	}
	,set_sel: function(value) {
		this.states.sel.set(value);
		return value;
	}
	,__class__: todo_view_TodoList
});
function $iterator(o) { if( o instanceof Array ) return function() { return HxOverrides.iter(o); }; return typeof(o.iterator) == 'function' ? $bind(o,o.iterator) : o.iterator; }
var $_, $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = function(){ return f.method.apply(f.scope, arguments); }; f.scope = o; f.method = m; o.hx__closures__[m.__id__] = f; } return f; }
String.prototype.__class__ = String;
String.__name__ = true;
Array.__name__ = true;
var Int = { __name__ : ["Int"]};
var Dynamic = { __name__ : ["Dynamic"]};
var Float = Number;
Float.__name__ = ["Float"];
var Bool = Boolean;
Bool.__ename__ = ["Bool"];
var Class = { __name__ : ["Class"]};
var Enum = { };
var __map_reserved = {};
haxe_ds_ObjectMap.count = 0;
js_Boot.__toStr = ({ }).toString;
scout_Dom.docNodeType = 9;
scout_Element.tagNames = ["a","abbr","address","area","article","aside","audio","b","base","bdi","bdo","blockquote","body","br","button","canvas","caption","cite","code","col","colgroup","dd","del","dfn","dir","div","dl","dt","em","embed","fieldset","figcaption","figure","footer","form","h1","h2","h3","h4","h5","h6","head","header","hgroup","hr","html","i","iframe","img","input","ins","kbd","keygen","label","legend","li","link","main","map","mark","menu","meta","nav","noscript","object","ol","optgroup","option","p","param","pre","q","rp","rt","ruby","s","samp","script","section","select","small","source","span","strong","style","sub","sup","table","tbody","td","textarea","tfoot","th","thead","title","tr","u","ul","video"];
scout_Element.voidTags = ["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"];
scout_View.autoIdIndex = 0;
todo_model_Store.__scout_ids = 0;
todo_model_Todo.__scout_ids = 0;
TodoApp.main();
})(typeof window != "undefined" ? window : typeof global != "undefined" ? global : typeof self != "undefined" ? self : this);
